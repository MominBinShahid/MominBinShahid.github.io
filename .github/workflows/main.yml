# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Using Node.js
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 14.x
          
      # Generate production env file
      # Setting env vars in .env.production because using on `env` in workflow `run` command
      # `npm run build` as in later phases of building env vars gets undefined
      # refs: 
      # - https://stackoverflow.com/questions/61117865/how-to-set-environment-variable-in-node-js-process-when-deploying-with-github-ac#comment117711331_61485186
      # - https://docs.github.com/en/actions/learn-github-actions/environment-variables#:~:text=to%20the%20runner.-,You%20can%20also%20use,-the%20GITHUB_ENV%20environment
      - name: create env file
        run: |
          touch .env.production
          echo CONTACT_FORM_ENDPOINT=$CONTACT_FORM_ENDPOINT >> .env.production
          echo GA_TRACKING_ID=$GA_TRACKING_ID >> .env.production
        env: # Or as an environment variable
          CONTACT_FORM_ENDPOINT: ${{ secrets.CONTACT_FORM_ENDPOINT }}
          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}

      # Wiping out the cache (.cache folder) and public directories
      # when to do gatsby clean (https://www.gatsbyjs.com/docs/build-caching/#clearing-cache)
      - name: Clearing gatsby cache
        run: npm run clean --if-present
      
      # Install project deps
      # - run: npm i --production
      - run: npm ci # this is not working as of now, fix this on local first
      
      # Build the site to /public folder
      - run: npm run build --if-present

      # Test the app
      # - run: npm test
      
      # Deploy to Github Pages (defaults branch is `gh-pages`, and folder is `./public`)
      # for first deployment follow: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-first-deployment-with-github_token
      - name: GitHub Pages action
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          # Set a generated GITHUB_TOKEN for pushing to the remote branch.
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Set Git user.name
          user_name: github-actions-bot
          # Set Git user.email
          user_email: support+actions@github.com
